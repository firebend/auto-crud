name: Build, Test, and Release

on:
  workflow_run:
    workflows: [Build and test]
    types: [completed]
    branches: [main]

jobs:
  build_test_and_release:
    name: Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Install Versionize
      run: dotnet tool install --global Versionize

    - name: Setup git
      run: |
       git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
       git config --local user.name "github-actions[bot]"

    - name: Versionize Release
      id: versionize
      run: versionize --changelog-all --exit-insignificant-commits
      continue-on-error: true

    - name: No release required
      if: steps.versionize.outcome != 'success'
      run: echo "Skipping publishing. No release required."

    - name: Publish Core
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.Core/Firebend.AutoCrud.Core.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish EntityFramework
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.EntityFramework/Firebend.AutoCrud.EntityFramework.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish EntityFramework Elastic
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.EntityFramework.Elastic/Firebend.AutoCrud.EntityFramework.Elastic.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Generator
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.Generator/Firebend.AutoCrud.Generator.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Mongo
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.Mongo/Firebend.AutoCrud.Mongo.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Web
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.DomainEvents.MassTransit/Firebend.AutoCrud.DomainEvents.MassTransit.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Domain Events MassTransit
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.Web/Firebend.AutoCrud.Web.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Change Tracking
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.ChangeTracking/Firebend.AutoCrud.ChangeTracking.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Change Tracking Ef
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.ChangeTracking.EntityFramework/Firebend.AutoCrud.ChangeTracking.EntityFramework.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Change Tracking Mongo
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.ChangeTracking.Mongo/Firebend.AutoCrud.ChangeTracking.Mongo.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Change Tracking Web
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.ChangeTracking.Web/Firebend.AutoCrud.ChangeTracking.Web.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish IO
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.Io/Firebend.AutoCrud.Io.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish IO Web
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.Io.Web/Firebend.AutoCrud.Io.Web.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Custom Fields EF
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.CustomFields.EntityFramework/Firebend.AutoCrud.CustomFields.EntityFramework.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Custom Fields Mongo
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.CustomFields.Mongo/Firebend.AutoCrud.CustomFields.Mongo.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false

    - name: Publish Custom Fields Web
      if: steps.versionize.outcome == 'success'
      uses: rohith/publish-nuget@v2
      with:
         PROJECT_FILE_PATH: Firebend.AutoCrud.CustomFields.Web/Firebend.AutoCrud.CustomFields.Web.csproj
         NUGET_KEY: ${{secrets.NUGET_API_KEY}}
         TAG_COMMIT: false
